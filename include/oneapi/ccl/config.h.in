#pragma once

/* ================================================================================================== */
/* CMake-configured feature macros */
#cmakedefine01 CCL_ENABLE_ZE
#cmakedefine01 CCL_ENABLE_SYCL

/* Platform macros */
#if defined(_WIN32) || defined(_WIN64)
  #define CCL_PLATFORM_WINDOWS
#elif defined(__APPLE__)
  #include <TargetConditionals.h>
  #define CCL_PLATFORM_POSIX
  #if TARGET_OS_MAC
    #define CCL_PLATFORM_MACOS
  #endif
#else
  #define CCL_PLATFORM_POSIX
#endif

/* ================================================================================================== */
/* Compiler macros */
#if defined(__clang__)
  #define CCL_COMPILER_CLANG
#elif defined(__GNUC__)
  #define CCL_COMPILER_GCC
#elif defined(_MSC_VER)
  #define CCL_COMPILER_MSVC
#else
  #error "Unsupported compiler"
#endif

/* C++ version check */
#if defined(_MSC_VER) && !defined(__clang__)
  #if _MSVC_LANG < 201103L
    #error "C++11 or higher is required"
  #endif
#elif __cplusplus < 201103L
    #error "C++11 or higher is required"
#endif

/* ================================================================================================== */
/* API visibility control */

#if defined(CCL_PLATFORM_WINDOWS)
  #ifdef CCL_STATIC_BUILD
    #define CCL_API
  #else /* Shared library (DLL) */
    #ifdef CCL_EXPORTS /* Building the DLL */
      #define CCL_API __declspec(dllexport)
    #else /* Using the DLL */
      #define CCL_API __declspec(dllimport)
    #endif
  #endif
#else /* Non-Windows platforms */
  #define CCL_API __attribute__((visibility("default")))
#endif

/* ================================================================================================== */
/* Debug mode */
#ifndef NDEBUG
  #define CCL_DEBUG_MODE
#else
  #define CCL_RELEASE_MODE
#endif